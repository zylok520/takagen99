android {
    compileSdk 34

    defaultConfig {
        applicationId 'com.github.tvbox.osc.tk.nrc'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "6.".concat(buildTime())
        multiDexEnabled true
        // 设置room的Schema的位置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    // 添加splits配置，生成universal APK
    splits {
        abi {
            enable true // 启用 ABI 分割
            reset() // 重置默认配置
            include 'arm64-v8a', 'armeabi-v7a' // 包含 arm64 和 armeabi
            universalApk true // 生成一个包含所有架构的 universal APK
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            minifyEnabled true
        }
    }

    flavorDimensions += ["abi", "brand"]
    productFlavors {
        armeabi {
            dimension = "abi"
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
        arm64 {
            dimension = "abi"
            ndk {
                abiFilters 'arm64-v8a'
            }
        }

        generic {
            // 通用版本
            dimension = "brand"
        }

        hisense {
            // 海信的
            applicationId 'com.github.hisense.osc.tk.frank'
            dimension = "brand"
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            def flavorNames = variant.productFlavors.collect { it.name }.join('-')
            // 构建自定义文件名
            def fileName = "TVBox_${variant.buildType.name}-${flavorNames}.apk"
            outputFileName = fileName
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildFeatures {
        dataBinding = true
    }

    lint {
        disable 'UnsafeOptInUsageError'
    }
}
